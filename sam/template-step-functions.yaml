AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Create an SNS topic and add a queue subscription

Parameters:
  DeployBucket:
    Type: String
    Description: Name of the deploy bucket with the state machine config file
  Client:
    Type: String
    Description: Resource Tag
  Project:
    Type: String
    Description: A value to identify the project the resource supports
  Environment:
    Description: For example, use 'dev' or 'prd'
    Type: String
  BucketName:
    Type: String
    Description: Name of Bucket
    Default: ""
  LambdaRoleArn:
    Type: String
    Description: ARN of lambda execution role
  GoodOlLambdaArn:
    Type: String
    Description: ARN of GoodOlLambda

Resources:
  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "state/${Client}-${Project}-${Environment}-StateMachine"
      RetentionInDays: 365
      Tags:
        - Key: Client
          Value: !Ref Client
        - Key: Project
          Value: !Ref Project
        - Key: Environment
          Value: !Ref Environment      

  TransformLambda:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs18.x
      Timeout: 30
      CodeUri: sam-disco-lambdas/dist
      Handler: index.transformLambdaHandler
      Role: !Ref LambdaRoleArn  

  AddLookupLambda:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs18.x
      Timeout: 30
      CodeUri: sam-disco-lambdas/dist
      Handler: index.addLookupLambdaHandler
      Role: !Ref LambdaRoleArn           

  RoleMachineLambda:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub 'states.${AWS::Region}.amazonaws.com'
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StepFunctionInvokeRole
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  - !Ref GoodOlLambdaArn
                  - !GetAtt TransformLambda.Arn
                  - !GetAtt AddLookupLambda.Arn
              - Effect: Allow
                Action: 
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt StateMachineLogGroup.Arn
        - PolicyName: StepFunctionLogger
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: 
                  - logs:CreateLogDelivery
                  - logs:CreateLogStream
                  - logs:GetLogDelivery
                  - logs:UpdateLogDelivery
                  - logs:DeleteLogDelivery
                  - logs:ListLogDeliveries
                  - logs:PutLogEvents
                  - logs:PutResourcePolicy
                  - logs:DescribeResourcePolicies
                  - logs:DescribeLogGroups
                Resource: "*"

  StateMachineEventPasser:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt RoleMachineLambda.Arn
      DefinitionS3Location: 
        Bucket: !Ref DeployBucket
        Key: !Sub '${Client}/${Environment}/discover_statemachine.json'
      DefinitionSubstitutions:
        GoodOlLambdaArn: !Ref GoodOlLambdaArn
        TransformLambdaArn: !GetAtt TransformLambda.Arn
        AddLookupLambdaArn: !GetAtt AddLookupLambda.Arn
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
             LogGroupArn: !GetAtt StateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL

      # DefinitionString: !Sub |
      # {
      #       "Comment": "AWS Step Functions Attempt",
      #       "StartAt": "GoodOlLambda",
      #       "Version": "1.0",
      #       "States": {
      #         "GoodOlLambda": {
      #           "Type": "Task",
      #           "Resource": "${GoodOlLambdaArn}",
      #           "Next": "TransformIt"
      #         },
      #         "TransformIt": {
      #           "Type": "Task",
      #           "Resource": "${TransformLambda.Arn}",
      #           "Next": "AddLookup"
      #         },
      #         "AddLookup": {
      #           "Type": "Task",
      #           "Resource": "${AddLookupLambda.Arn}",
      #           "Next": "Done"
      #         },
      #         "Done": {
      #           "Type": "Succeed"
      #         }
      #       }
      #   }

        
