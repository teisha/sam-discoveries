AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "Master template for objects created to interface with \n"
Parameters:
  Client:
    Type: String
    Description: Resource Tag
  Project:
    Type: String
    Description: A value to identify the project the resource supports
  Environment:
    Description: Enter value to suffix the Kinesis and Firehose stream names to make
      them unique within an account and region. For example, use 'dev' or 'prd'
    Type: String
  CustomEventProcessing:
    Type: String
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'false'
    Description: 'This parameter describes whether or not to deploy Event firehose
      or a lambda with custom logic  to add to Event before it is added to bucket

      '
Conditions:
  DeployEventFirehose:
    Fn::Equals:
    - Ref: CustomEventProcessing
    - 'false'
  DeployCustomEventProcessor:
    Fn::Equals:
    - Ref: CustomEventProcessing
    - 'true'
Resources:
  DataTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName:
        Fn::Sub: ${Client}-${Project}-${Environment}-data-table
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
      - AttributeName: start
        AttributeType: S
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
      - IndexName: GSI1
        KeySchema:
        - AttributeName: sk
          KeyType: HASH
        - AttributeName: pk
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      - IndexName: startIndex
        KeySchema:
        - AttributeName: start
          KeyType: HASH
        - AttributeName: pk
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
  CreateBucket:
    Type: AWS::Serverless::Application
    Properties:
      Location: CreateBucket/template.yaml
      Parameters:
        Client:
          Ref: Client
        Project:
          Ref: Project
        Environment:
          Ref: Environment
    Metadata:
      SamResourceId: CreateBucket
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole
      Policies:
      - PolicyName: AccessPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:ListBucket
            - s3:GetBucketLocation
            Resource:
            - Fn::GetAtt:
              - CreateBucket
              - Outputs.BucketArn
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            Resource:
            - Fn::Join:
              - ''
              - - Fn::GetAtt:
                  - CreateBucket
                  - Outputs.BucketArn
                - /*
          - Effect: Allow
            Action:
            - kms:Encrypt
            - kms:Decrypt
            - kms:ReEncrypt*
            - kms:GenerateDataKey*
            - kms:DescribeKey
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:aws:kms:'
                - Ref: AWS::Region
                - ':'
                - Ref: AWS::AccountId
                - :key/
                - Fn::GetAtt:
                  - CreateBucket
                  - Outputs.BucketKmsKeyId
  CreateQueueProcessors:
    Type: AWS::Serverless::Application
    Properties:
      Location: CreateQueueProcessors/template.yaml
      Parameters:
        Client:
          Ref: Client
        Project:
          Ref: Project
        Environment:
          Ref: Environment
        BucketName:
          Fn::GetAtt:
          - CreateBucket
          - Outputs.BucketName
        LambdaRoleArn:
          Fn::GetAtt:
          - LambdaRole
          - Arn
    Metadata:
      SamResourceId: CreateQueueProcessors
  IntegrationUser:
    Type: AWS::IAM::User
    Properties:
      UserName:
        Fn::Sub: ${Client}-${Project}-${Environment}-user
  AccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AccessPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:ListBucket
          - s3:GetBucketLocation
          Resource:
          - Fn::GetAtt:
            - CreateBucket
            - Outputs.BucketArn
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:PutObject
          - s3:DeleteObject
          Resource:
          - Fn::Join:
            - ''
            - - Fn::GetAtt:
                - CreateBucket
                - Outputs.BucketArn
              - /*
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:aws:kms:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :key/
              - Fn::GetAtt:
                - CreateBucket
                - Outputs.BucketKmsKeyId
      Users:
      - Ref: IntegrationUser
Outputs:
  S3BucketName:
    Description: Name of storage buckets for all objects in  integration
    Value:
      Fn::GetAtt:
      - CreateBucket
      - Outputs.BucketName
  KMSKeyArn:
    Description: ARN of KMS Key needed to encrypt data sent to
    Value:
      Fn::GetAtt:
      - CreateBucket
      - Outputs.BucketKmsKeyArn
  UserName:
    Description: Application User For Infra - Access Key is not yet generated so that
      the Key and Secret don't get logged
    Value:
      Ref: IntegrationUser
