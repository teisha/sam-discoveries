AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Create an SNS topic and add a queue subscription

  '
Parameters:
  Client:
    Type: String
    Description: Resource Tag
  Project:
    Type: String
    Description: A value to identify the project the resource supports
  Environment:
    Description: For example, use 'dev' or 'prd'
    Type: String
  BucketName:
    Type: String
    Description: Name of Bucket
  LambdaRoleArn:
    Type: String
    Description: ARN of lambda execution role
Resources:
  SamDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      Tags:
      - Key: Client
        Value:
          Ref: Client
      - Key: Project
        Value:
          Ref: Project
      - Key: Environment
        Value:
          Ref: Environment
  SamQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 30
      RedrivePolicy:
        maxReceiveCount: 2
        deadLetterTargetArn:
          Fn::GetAtt:
          - SamDeadLetterQueue
          - Arn
      Tags:
      - Key: Client
        Value:
          Ref: Client
      - Key: Project
        Value:
          Ref: Project
      - Key: Environment
        Value:
          Ref: Environment
  SamTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName:
        Fn::Sub: ${Client}-${Project}-experiment-${Environment}
      Subscription:
      - Endpoint:
          Fn::GetAtt:
          - SamQueue
          - Arn
        Protocol: sqs
      Tags:
      - Key: Client
        Value:
          Ref: Client
      - Key: Project
        Value:
          Ref: Project
      - Key: Environment
        Value:
          Ref: Environment
  SamQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: sns.amazonaws.com
          Action:
          - sqs:SendMessage
          Resource: '*'
          Condition:
            ArnEquals:
              aws:SourceArn:
                Ref: SamTopic
      Queues:
      - Ref: SamQueue
  SamEventHandler:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs18.x
      Timeout: 30
      CodeUri: SamEventHandler
      Handler: index.handler
      Environment:
        Variables:
          REGION:
            Ref: AWS::Region
          BUCKET:
            Ref: BucketName
      Role:
        Ref: LambdaRoleArn
      Events:
        SamEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - SamQueue
              - Arn
            BatchSize: 10
    Metadata:
      SamResourceId: SamEventHandler
Outputs:
  SamEventHandlerLambda:
    Description: Handler for queue events
    Value:
      Fn::GetAtt:
      - SamEventHandler
      - Arn
  SamQueueArn:
    Description: Arn of Queue Created
    Value:
      Fn::GetAtt:
      - SamQueue
      - Arn
  SamDeadLetterQueueArn:
    Description: Arn of Dead Letter Queue
    Value:
      Fn::GetAtt:
      - SamDeadLetterQueue
      - Arn
